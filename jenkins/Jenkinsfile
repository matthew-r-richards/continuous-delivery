node {
    stage("Checkout") {
        git url: 'https://github.com/matthew-r-richards/continuous-deployment.git'
    }
    stage("Build, Test and Publish Server App") {
        sh 'cd apps/Server; docker run --rm -v $(pwd):/sln --workdir /sln microsoft/aspnetcore-build sh ./build.sh;'
    }
    stage("Build and Test Client App") {
        sh 'cd apps/Client; docker run --rm -v $(pwd):/src --workdir /src node sh ./build.sh;'
    }
    stage("Deploy to QA") {
        sh "sshpass -p vagrant rsync -e 'ssh -o StrictHostKeyChecking=no' puppet/manifests/* vagrant@puppet.vm:/etc/puppetlabs/code/environments/qa/manifests";
        sh "sshpass -p vagrant rsync -re 'ssh -o StrictHostKeyChecking=no' puppet/modules/* vagrant@puppet.vm:/etc/puppetlabs/code/environments/qa/modules";
        // the puppet agent exits with a code of 2 if changes have been applied, we want to convert this to 0 so that Jenkins doesn't think the step failed'
        sh "sshpass -p vagrant ssh -o StrictHostKeyChecking=no vagrant@qa.vm sudo /opt/puppetlabs/bin/puppet agent -t || test $? -eq 2";
    }
    publishHTML (target: [
        allowMissing: false,
        alwaysLinkToLastBuild: false,
        keepAll: true,
        reportDir: 'apps/Client/coverage/lcov-report',
        reportFiles: 'index.html',
        reportName: "Client App Coverage Report"
    ])
}